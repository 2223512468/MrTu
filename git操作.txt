1：我们需要先创建一个本地的版本库（其实也就是一个文件夹）。
直接右击新建文件夹，也可以右击打开Git bash命令行窗口通过命令来创建。
2：执行命令 mkdir 文件夹名称 创建文件夹
3: 通过命令git init把这个文件夹变成Git可管理的仓库
4: 把你的项目粘贴到这个本地Git仓库里面
5: 通过git add .把刚才复制过来的项目全部添加到仓库上
6: 用git commit -m "jni desc"把项目提交到仓库。
7：由于本地Git仓库和Github仓库之间的传输是通过SSH加密的，所以连接时需要设置一下：
   创建SSH KEY。先看一下你C盘用户目录下有没有.ssh目录，有的话看下里面有没有id_rsa和id_rsa.pub这两个文件，有就跳到下一步，没有就通过下面命令创建
   $ ssh-keygen -t rsa -C "youremail@example.com"
   然后一路回车。这时你就会在用户下的.ssh目录里找到id_rsa和id_rsa.pub这两个文件  
8 :登录Github,找到右上角的图标，打开点进里面的Settings，再选中里面的SSH and GPG KEYS，点击右上角的New SSH key，然后Title里面随便填，
   再把刚才id_rsa.pub里面的内容复制到Title下面的Key内容框里面，最后点击Add SSH key，这样就完成了SSH Key的加密
9 :在Github上创建一个Git仓库。
10:在Github上创建好Git仓库之后我们就可以和本地仓库进行关联了，根据创建好的Git仓库页面的提示，可以在本地TEST仓库的命令行输入
   git remote add origin https://github.com/guyibang/TEST2.git
11:关联好之后我们就可以把本地库的所有内容推送到远程仓库（也就是Github）上了，通过：
   git push -u origin master
   由于新建的远程仓库是空的，所以要加上-u这个参数，等远程仓库里面有了内容之后，下次再从本地库上传内容的时候只需下面这样就可以了：
   git push origin master